<div class="position">

  <%
     position_up = "fa fa-thumbs-o-up strong"
     position_down = "fa fa-thumbs-o-down strong"
     position_light = "fa fa-lightbulb-o strong"

     if users_who_interacted(opinion.id).include?(current_user)
       case (position_by_user(opinion.id, current_user).first)
         when 'pro'
           position_up = position_up << " up"
         when 'against'
           position_down = position_down << " down"
         when 'proposal'
           position_light = position_light << " prop"
       end
     end
  %>


  <%= link_to opinion_participation_path(opinion.id, :params => {position: 'up', discussion_id: @discussion.id}), remote: true, class:"btn-up-#{opinion.id}" do %>
      <i id="up-<%= opinion.id %>" class="<%=position_up%>"><span class="d"> Concordar</span><span class="n"><%= relevancy_numbers(opinion.id, "pro" )%></span></i>
  <% end %>
  <%= link_to  opinion_participation_path(opinion.id, :params => {position: 'down', discussion_id: @discussion.id}), remote: true, class:"btn-down-#{opinion.id}" do %>
      <i id="down-<%= opinion.id %>" class="<%=position_down%>"><span class="d"> Discordar</span><span class="n"><%= relevancy_numbers(opinion.id, "against" )%></span></i>
  <% end %>
  <% if @discussion.proposal_enabled %>
      <%= link_to  opinion_participation_path(opinion.id, :params => {position: 'prop', discussion_id: @discussion.id}), remote: true, class:"btn-prop-#{opinion.id}" do %>
          <i id="prop-<%= opinion.id %>" class="<%=position_light%>"><span class="d"> Propor</span><span class="n"><%= relevancy_numbers(opinion.id, "proposal" )%></span></i>
      <% end %>
  <% end %>
</div>


<% content_for :js do %>

    $('body').bind('ajax:success',
    function(event, xhr, status, header){
    response = JSON.parse(header.getResponseHeader('result'));

    parent = response.parent
    position = response.position
    status = response.status

    var upButton = $("."+"btn-" + "up" + "-"+ parent)
    var downButton = $("."+"btn-" + "down" + "-"+ parent)
    var propButton = $("."+"btn-" + "prop" + "-"+ parent)

    // Adding One Boxe
    var sms = $("#sms"+parent)

    if (status == 'deleted')
    {
    if (position == "up")
    {
    upButton.find("i").removeClass("up");
    sms.remove();
    }
    if (position == "down")
    {
    downButton.find("i").removeClass("down");
    sms.remove();
    }
    if (position == "prop")
    {
    propButton.find("i").removeClass("prop");
    sms.remove();
    }

    // New Values

    upButton.find(".n").text(response.pro)
    downButton.find(".n").text(response.against)
    propButton.find(".n").text(response.proposal)

    }

    if (status == 'saved')
    {
    if (position == "up")
    {
    upButton.find("i").addClass("up");
    downButton.find("i").removeClass("down");
    propButton.find("i").removeClass("prop");
    }
    if (position == "down")
    {
    downButton.find("i").addClass("down");
    upButton.find("i").removeClass("up");
    propButton.find("i").removeClass("prop");
    }
    if (position == "prop")
    {
    propButton.find("i").addClass("prop");
    downButton.find("i").removeClass("down");
    upButton.find("i").removeClass("up");
    }

    // New Values

    upButton.find(".n").text(response.pro)
    downButton.find(".n").text(response.against)
    propButton.find(".n").text(response.proposal)


   createBoxe(sms);

  }

  });

function createBoxe(sms) {
   if (position == 'up')
    {
    sendMessage = $("<div>", {id:"sms"+parent, class:"send-message light-green lighten-4"});
  }

  if (position == 'down')
  {
  sendMessage = $("<div>", {id:"sms"+parent, class:"send-message red lighten-4"});
  }

  if (position == 'prop')
  {
  sendMessage = $("<div>", {id:"sms"+parent, class:"send-message amber lighten-4"});
  }



  // Adding Boxe
  if (sms.length == 0)
  {
  $("#"+"opinion"+"-"+parent).append(sendMessage)
  }

  else
  {
  sms.remove();
  $("#"+"opinion"+"-"+parent).append(sendMessage)
  }

  // Create Emoji Div
  emoji = $("<div>", {class:"emoji-key valign-wrapper"});

  // Append Emoji Div
  sendMessage.append(emoji);


  // Create Emoji A1
  emojiA1 = $("<a>", {href: "#"});

  emoji.append(emojiA1);

  // Create Emoji I1
  emojiI1 = $("<i>", {class:"fa fa-smile-o"});

  // Append Emoji I1
  emojiA1.append(emojiI1);

  // Create Message Box
  messageBox = $("<div>", {class: "message"});

  // Append Message Box
  sendMessage.append(messageBox);


  // Create TextArea Box

  if (position == 'up')
  {
   textAreaBox = $("<textarea>", {rows:'1', placeholder:"<%=I18n.t("discussion.opinion_agreement")%>"});
  }

  if (position == 'down')
  {
    textAreaBox = $("<textarea>", {rows:'1', placeholder:"<%=I18n.t("discussion.opinion_disagreement")%>"});
  }

  if (position == 'prop')
  {
    textAreaBox = $("<textarea>", {rows:'1', placeholder:"<%=I18n.t("discussion.opinion_proposal")%>"});
  }
  // Append TextArea Box
  messageBox.append(textAreaBox);


  valignWrapper = $("<div>", {class: "send valign-wrapper"});


  // Create Emoji A2
  emojiA2 = $("<a>", {href: "#"});

  valignWrapper.append(emojiA2);

  // Create Emoji I2
  emojiI2 = $("<i>", {class:"mdi-content-clear"});

  // Append Emoji I2
  emojiA2.append(emojiI2);

  sendMessage.append(valignWrapper);
}

function seeBoxe(){
 function get_height(elt) {
    return elt.scrollHeight + parseFloat($(elt).css("borderTopWidth")) + parseFloat($(elt).css("borderBottomWidth"));
}

$("textarea").keyup(function(e) {
    var found = 0;
    while (!found) {
        $(this).height($(this).height() - 10);
        while($(this).outerHeight() < get_height(this)) {
            $(this).height($(this).height() + 1);
            found = 1;
        };
    }
});

var oldVal = "";
$("textarea").on("change keyup paste", function() {
    var currentVal = $(this).val();
    if(currentVal == oldVal) {
        return; //check to prevent multiple simultaneous triggers
    }

    oldVal = currentVal;
    //action to be performed on textarea changed

    if (!$.trim($("textarea").val())) {
      $('.send').find('i').attr('class', 'mdi-content-clear');
      console.log('vazio');
    } else {
      $('.send').find('i').attr('class', 'mdi-content-send');
      console.log('cheio');
    }
});
}

<% end %>
