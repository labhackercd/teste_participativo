<div class="send-message amber lighten-4">
  <div class="emoji-key valign-wrapper">
    <a href="#"><i class="fa fa-smile-o"></i></a>
  </div>
  <div class="message">
    <textarea rows='1' placeholder='Você concordou, gostaria de dizer o porquê?'></textarea>
  </div>
  <div class="send valign-wrapper">
    <a href="#"><i class="mdi-content-send"></i></a>
  </div>
</div>

<%= javascript_tag do %>

function get_height(elt) {
    return elt.scrollHeight + parseFloat($(elt).css("borderTopWidth")) + parseFloat($(elt).css("borderBottomWidth"));
}

$("textarea").keyup(function(e) {
    var found = 0;
    while (!found) {
        $(this).height($(this).height() - 10);
        while($(this).outerHeight() < get_height(this)) {
            $(this).height($(this).height() + 1);
            found = 1;
        };
    }
});
                                                       

                                                       
$('textarea').focus( function() {
  if (!$.trim($("textarea").val())) {
    console.log('vazio');
  }
});

$('textarea').blur( function() {
  if (!$.trim($("textarea").val())) {
    console.log('saiu');
  }
});
                                                       

//Creating Div of Title
div_title = $("<div>", {id: "div-title", class:"container center"});


//Append Div of Title on Body
$("body").append(div_title)


// Create a Container
container = $("<div>", {class: "container"});

// Append Container to Body
$("body").append(container)


// Create a Box Container
box = $("<div>", {class: "box"});

container.append(box);

// Create a Main
main = $("<div>", {class: "main"});

box.append(main);



//Do the magical Loop

<% stack = [] %>
<% stack.push(@root)  %>

<% loop do %>

<% current_node = stack.last %>


<% if current_node.parent_opinion == nil %>
// if not parent, so it is root
parentNode = main

<% else %>
// Locate Parent Node

parentNode = $("#opinion-<%=current_node.parent_opinion.id%> > #children")


<%end%>

parentNode.append("<%= escape_javascript(render 'discussions/opinion', :opinion => current_node, :discussion => @discussion )%>");

<% stack.pop %>


<%if current_node.related_opinions.size != 0
   current_node.related_opinions.reverse.each do |opinion|

  stack.push(opinion)
  end
   end
%>

<% break if stack.empty? %>

<% end %> 

<% end %>
